=begin comment

MailSlurp API

MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 

The version of the OpenAPI document: 6.5.2

Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('MailSlurp::EmailControllerApi');

my $api = MailSlurp::EmailControllerApi->new();
isa_ok($api, 'MailSlurp::EmailControllerApi');

#
# delete_all_emails test
#
{
    my $result = $api->delete_all_emails();
}

#
# delete_email test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->delete_email(email_id => $email_id);
}

#
# download_attachment test
#
{
    my $attachment_id = undef; # replace NULL with a proper value
    my $email_id = undef; # replace NULL with a proper value
    my $api_key = undef; # replace NULL with a proper value
    my $result = $api->download_attachment(attachment_id => $attachment_id, email_id => $email_id, api_key => $api_key);
}

#
# download_attachment_base64 test
#
{
    my $attachment_id = undef; # replace NULL with a proper value
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->download_attachment_base64(attachment_id => $attachment_id, email_id => $email_id);
}

#
# forward_email test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $forward_email_options = undef; # replace NULL with a proper value
    my $result = $api->forward_email(email_id => $email_id, forward_email_options => $forward_email_options);
}

#
# get_attachment_meta_data test
#
{
    my $attachment_id = undef; # replace NULL with a proper value
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->get_attachment_meta_data(attachment_id => $attachment_id, email_id => $email_id);
}

#
# get_attachments test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->get_attachments(email_id => $email_id);
}

#
# get_email test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $decode = undef; # replace NULL with a proper value
    my $result = $api->get_email(email_id => $email_id, decode => $decode);
}

#
# get_email_content_match test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $content_match_options = undef; # replace NULL with a proper value
    my $result = $api->get_email_content_match(email_id => $email_id, content_match_options => $content_match_options);
}

#
# get_email_html test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $decode = undef; # replace NULL with a proper value
    my $result = $api->get_email_html(email_id => $email_id, decode => $decode);
}

#
# get_email_html_query test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $html_selector = undef; # replace NULL with a proper value
    my $result = $api->get_email_html_query(email_id => $email_id, html_selector => $html_selector);
}

#
# get_email_text_lines test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $decode_html_entities = undef; # replace NULL with a proper value
    my $line_separator = undef; # replace NULL with a proper value
    my $result = $api->get_email_text_lines(email_id => $email_id, decode_html_entities => $decode_html_entities, line_separator => $line_separator);
}

#
# get_emails_paginated test
#
{
    my $inbox_id = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $sort = undef; # replace NULL with a proper value
    my $unread_only = undef; # replace NULL with a proper value
    my $result = $api->get_emails_paginated(inbox_id => $inbox_id, page => $page, size => $size, sort => $sort, unread_only => $unread_only);
}

#
# get_latest_email test
#
{
    my $inbox_ids = undef; # replace NULL with a proper value
    my $result = $api->get_latest_email(inbox_ids => $inbox_ids);
}

#
# get_latest_email_in_inbox test
#
{
    my $inbox_id = undef; # replace NULL with a proper value
    my $result = $api->get_latest_email_in_inbox(inbox_id => $inbox_id);
}

#
# get_organization_emails_paginated test
#
{
    my $inbox_id = undef; # replace NULL with a proper value
    my $page = undef; # replace NULL with a proper value
    my $size = undef; # replace NULL with a proper value
    my $sort = undef; # replace NULL with a proper value
    my $unread_only = undef; # replace NULL with a proper value
    my $result = $api->get_organization_emails_paginated(inbox_id => $inbox_id, page => $page, size => $size, sort => $sort, unread_only => $unread_only);
}

#
# get_raw_email_contents test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->get_raw_email_contents(email_id => $email_id);
}

#
# get_raw_email_json test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->get_raw_email_json(email_id => $email_id);
}

#
# get_unread_email_count test
#
{
    my $result = $api->get_unread_email_count();
}

#
# reply_to_email test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $reply_to_email_options = undef; # replace NULL with a proper value
    my $result = $api->reply_to_email(email_id => $email_id, reply_to_email_options => $reply_to_email_options);
}

#
# validate_email test
#
{
    my $email_id = undef; # replace NULL with a proper value
    my $result = $api->validate_email(email_id => $email_id);
}


1;
