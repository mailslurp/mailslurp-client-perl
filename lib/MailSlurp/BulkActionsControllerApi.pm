=begin comment

MailSlurp API

MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository

The version of the OpenAPI document: 6.5.2
Contact: contact@mailslurp.dev
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# Do not edit the class manually.
# Ref: https://openapi-generator.tech
#
package MailSlurp::BulkActionsControllerApi;

require 5.6.0;
use strict;
use warnings;
use utf8; 
use Exporter;
use Carp qw( croak );
use Log::Any qw($log);

use MailSlurp::ApiClient;

use base "Class::Data::Inheritable";

__PACKAGE__->mk_classdata('method_documentation' => {});

sub new {
    my $class = shift;
    my $api_client;

    if ($_[0] && ref $_[0] && ref $_[0] eq 'MailSlurp::ApiClient' ) {
        $api_client = $_[0];
    } else {
        $api_client = MailSlurp::ApiClient->new(@_);
    }

    bless { api_client => $api_client }, $class;

}


#
# bulk_create_inboxes
#
# Bulk create Inboxes (email addresses)
# 
# @param int $count Number of inboxes to be created in bulk (required)
{
    my $params = {
    'count' => {
        data_type => 'int',
        description => 'Number of inboxes to be created in bulk',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'bulk_create_inboxes' } = { 
        summary => 'Bulk create Inboxes (email addresses)',
        params => $params,
        returns => 'ARRAY[InboxDto]',
        };
}
# @return ARRAY[InboxDto]
#
sub bulk_create_inboxes {
    my ($self, %args) = @_;

    # verify the required parameter 'count' is set
    unless (exists $args{'count'}) {
      croak("Missing the required parameter 'count' when calling bulk_create_inboxes");
    }

    # parse inputs
    my $_resource_path = '/bulk/inboxes';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept('*/*');
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type();

    # query params
    if ( exists $args{'count'}) {
        $query_params->{'count'} = $self->{api_client}->to_query_value($args{'count'});
    }

    my $_body_data;
    # authentication setting, if any
    my $auth_settings = [qw(API_KEY )];

    # make the API Call
    my $response = $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    if (!$response) {
        return;
    }
    my $_response_object = $self->{api_client}->deserialize('ARRAY[InboxDto]', $response);
    return $_response_object;
}

#
# bulk_delete_inboxes
#
# Bulk Delete Inboxes
# 
# @param ARRAY[string] $request_body  (required)
{
    my $params = {
    'request_body' => {
        data_type => 'ARRAY[string]',
        description => '',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'bulk_delete_inboxes' } = { 
        summary => 'Bulk Delete Inboxes',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub bulk_delete_inboxes {
    my ($self, %args) = @_;

    # verify the required parameter 'request_body' is set
    unless (exists $args{'request_body'}) {
      croak("Missing the required parameter 'request_body' when calling bulk_delete_inboxes");
    }

    # parse inputs
    my $_resource_path = '/bulk/inboxes';

    my $_method = 'DELETE';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept();
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    my $_body_data;
    # body params
    if ( exists $args{'request_body'}) {
        $_body_data = $args{'request_body'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(API_KEY )];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

#
# bulk_send_emails
#
# Bulk Send Emails
# 
# @param BulkSendEmailOptions $bulk_send_email_options  (required)
{
    my $params = {
    'bulk_send_email_options' => {
        data_type => 'BulkSendEmailOptions',
        description => '',
        required => '1',
    },
    };
    __PACKAGE__->method_documentation->{ 'bulk_send_emails' } = { 
        summary => 'Bulk Send Emails',
        params => $params,
        returns => undef,
        };
}
# @return void
#
sub bulk_send_emails {
    my ($self, %args) = @_;

    # verify the required parameter 'bulk_send_email_options' is set
    unless (exists $args{'bulk_send_email_options'}) {
      croak("Missing the required parameter 'bulk_send_email_options' when calling bulk_send_emails");
    }

    # parse inputs
    my $_resource_path = '/bulk/send';

    my $_method = 'POST';
    my $query_params = {};
    my $header_params = {};
    my $form_params = {};

    # 'Accept' and 'Content-Type' header
    my $_header_accept = $self->{api_client}->select_header_accept();
    if ($_header_accept) {
        $header_params->{'Accept'} = $_header_accept;
    }
    $header_params->{'Content-Type'} = $self->{api_client}->select_header_content_type('application/json');

    my $_body_data;
    # body params
    if ( exists $args{'bulk_send_email_options'}) {
        $_body_data = $args{'bulk_send_email_options'};
    }

    # authentication setting, if any
    my $auth_settings = [qw(API_KEY )];

    # make the API Call
    $self->{api_client}->call_api($_resource_path, $_method,
                                           $query_params, $form_params,
                                           $header_params, $_body_data, $auth_settings);
    return;
}

1;
